/*
 * generated by Xtext 2.32.0
 */
grammar InternalVcsFeatures;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package diro.geodes.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package diro.geodes.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import diro.geodes.services.VcsFeaturesGrammarAccess;

}

@parser::members {

 	private VcsFeaturesGrammarAccess grammarAccess;

    public InternalVcsFeaturesParser(TokenStream input, VcsFeaturesGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "VCSFeatures";
   	}

   	@Override
   	protected VcsFeaturesGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleVCSFeatures
entryRuleVCSFeatures returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVCSFeaturesRule()); }
	iv_ruleVCSFeatures=ruleVCSFeatures
	{ $current=$iv_ruleVCSFeatures.current; }
	EOF;

// Rule VCSFeatures
ruleVCSFeatures returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVCSFeaturesAccess().getVCSFeaturesAction_0(),
					$current);
			}
		)
		otherlv_1='VCSFeatures'
		{
			newLeafNode(otherlv_1, grammarAccess.getVCSFeaturesAccess().getVCSFeaturesKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVCSFeaturesAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVCSFeaturesRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"diro.geodes.VcsFeatures.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getVCSFeaturesAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='commands'
			{
				newLeafNode(otherlv_4, grammarAccess.getVCSFeaturesAccess().getCommandsKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getVCSFeaturesAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVCSFeaturesAccess().getCommandsCommandsParserRuleCall_4_2_0());
					}
					lv_commands_6_0=ruleCommands
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVCSFeaturesRule());
						}
						add(
							$current,
							"commands",
							lv_commands_6_0,
							"diro.geodes.VcsFeatures.Commands");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getVCSFeaturesAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVCSFeaturesAccess().getCommandsCommandsParserRuleCall_4_3_1_0());
						}
						lv_commands_8_0=ruleCommands
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVCSFeaturesRule());
							}
							add(
								$current,
								"commands",
								lv_commands_8_0,
								"diro.geodes.VcsFeatures.Commands");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getVCSFeaturesAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_10='history'
			{
				newLeafNode(otherlv_10, grammarAccess.getVCSFeaturesAccess().getHistoryKeyword_5_0());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getVCSFeaturesAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVCSFeaturesAccess().getHistoryHistoryParserRuleCall_5_2_0());
					}
					lv_history_12_0=ruleHistory
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVCSFeaturesRule());
						}
						add(
							$current,
							"history",
							lv_history_12_0,
							"diro.geodes.VcsFeatures.History");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getVCSFeaturesAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVCSFeaturesAccess().getHistoryHistoryParserRuleCall_5_3_1_0());
						}
						lv_history_14_0=ruleHistory
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVCSFeaturesRule());
							}
							add(
								$current,
								"history",
								lv_history_14_0,
								"diro.geodes.VcsFeatures.History");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getVCSFeaturesAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		(
			otherlv_16='versionunit'
			{
				newLeafNode(otherlv_16, grammarAccess.getVCSFeaturesAccess().getVersionunitKeyword_6_0());
			}
			otherlv_17='{'
			{
				newLeafNode(otherlv_17, grammarAccess.getVCSFeaturesAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVCSFeaturesAccess().getVersionunitVersionUnitParserRuleCall_6_2_0());
					}
					lv_versionunit_18_0=ruleVersionUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVCSFeaturesRule());
						}
						add(
							$current,
							"versionunit",
							lv_versionunit_18_0,
							"diro.geodes.VcsFeatures.VersionUnit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_19=','
				{
					newLeafNode(otherlv_19, grammarAccess.getVCSFeaturesAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVCSFeaturesAccess().getVersionunitVersionUnitParserRuleCall_6_3_1_0());
						}
						lv_versionunit_20_0=ruleVersionUnit
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVCSFeaturesRule());
							}
							add(
								$current,
								"versionunit",
								lv_versionunit_20_0,
								"diro.geodes.VcsFeatures.VersionUnit");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_21='}'
			{
				newLeafNode(otherlv_21, grammarAccess.getVCSFeaturesAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		(
			otherlv_22='collaborationstyle'
			{
				newLeafNode(otherlv_22, grammarAccess.getVCSFeaturesAccess().getCollaborationstyleKeyword_7_0());
			}
			otherlv_23='{'
			{
				newLeafNode(otherlv_23, grammarAccess.getVCSFeaturesAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVCSFeaturesAccess().getCollaborationstyleCollaborationStyleParserRuleCall_7_2_0());
					}
					lv_collaborationstyle_24_0=ruleCollaborationStyle
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVCSFeaturesRule());
						}
						add(
							$current,
							"collaborationstyle",
							lv_collaborationstyle_24_0,
							"diro.geodes.VcsFeatures.CollaborationStyle");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_25=','
				{
					newLeafNode(otherlv_25, grammarAccess.getVCSFeaturesAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVCSFeaturesAccess().getCollaborationstyleCollaborationStyleParserRuleCall_7_3_1_0());
						}
						lv_collaborationstyle_26_0=ruleCollaborationStyle
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVCSFeaturesRule());
							}
							add(
								$current,
								"collaborationstyle",
								lv_collaborationstyle_26_0,
								"diro.geodes.VcsFeatures.CollaborationStyle");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_27='}'
			{
				newLeafNode(otherlv_27, grammarAccess.getVCSFeaturesAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		(
			otherlv_28='database'
			{
				newLeafNode(otherlv_28, grammarAccess.getVCSFeaturesAccess().getDatabaseKeyword_8_0());
			}
			otherlv_29='{'
			{
				newLeafNode(otherlv_29, grammarAccess.getVCSFeaturesAccess().getLeftCurlyBracketKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVCSFeaturesAccess().getDatabaseDatabaseParserRuleCall_8_2_0());
					}
					lv_database_30_0=ruleDatabase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVCSFeaturesRule());
						}
						add(
							$current,
							"database",
							lv_database_30_0,
							"diro.geodes.VcsFeatures.Database");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_31=','
				{
					newLeafNode(otherlv_31, grammarAccess.getVCSFeaturesAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVCSFeaturesAccess().getDatabaseDatabaseParserRuleCall_8_3_1_0());
						}
						lv_database_32_0=ruleDatabase
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVCSFeaturesRule());
							}
							add(
								$current,
								"database",
								lv_database_32_0,
								"diro.geodes.VcsFeatures.Database");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_33='}'
			{
				newLeafNode(otherlv_33, grammarAccess.getVCSFeaturesAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
		otherlv_34='}'
		{
			newLeafNode(otherlv_34, grammarAccess.getVCSFeaturesAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleCommands
entryRuleCommands returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandsRule()); }
	iv_ruleCommands=ruleCommands
	{ $current=$iv_ruleCommands.current; }
	EOF;

// Rule Commands
ruleCommands returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCommandsAccess().getCommandsAction_0(),
					$current);
			}
		)
		otherlv_1='-'
		{
			newLeafNode(otherlv_1, grammarAccess.getCommandsAccess().getHyphenMinusKeyword_1());
		}
		(
			otherlv_2='mergeStrategy'
			{
				newLeafNode(otherlv_2, grammarAccess.getCommandsAccess().getMergeStrategyKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandsAccess().getMergeStrategyMergeStrategyEnumRuleCall_2_1_0());
					}
					lv_mergeStrategy_3_0=ruleMergeStrategy
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandsRule());
						}
						set(
							$current,
							"mergeStrategy",
							lv_mergeStrategy_3_0,
							"diro.geodes.VcsFeatures.MergeStrategy");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='-'
		{
			newLeafNode(otherlv_4, grammarAccess.getCommandsAccess().getHyphenMinusKeyword_3());
		}
		(
			otherlv_5='lowlevelcommand'
			{
				newLeafNode(otherlv_5, grammarAccess.getCommandsAccess().getLowlevelcommandKeyword_4_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getCommandsAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandsAccess().getLowlevelcommandLowLevelCommandParserRuleCall_4_2_0());
					}
					lv_lowlevelcommand_7_0=ruleLowLevelCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandsRule());
						}
						add(
							$current,
							"lowlevelcommand",
							lv_lowlevelcommand_7_0,
							"diro.geodes.VcsFeatures.LowLevelCommand");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getCommandsAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCommandsAccess().getLowlevelcommandLowLevelCommandParserRuleCall_4_3_1_0());
						}
						lv_lowlevelcommand_9_0=ruleLowLevelCommand
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommandsRule());
							}
							add(
								$current,
								"lowlevelcommand",
								lv_lowlevelcommand_9_0,
								"diro.geodes.VcsFeatures.LowLevelCommand");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getCommandsAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_11='-'
		{
			newLeafNode(otherlv_11, grammarAccess.getCommandsAccess().getHyphenMinusKeyword_5());
		}
		(
			otherlv_12='highlevelcommand'
			{
				newLeafNode(otherlv_12, grammarAccess.getCommandsAccess().getHighlevelcommandKeyword_6_0());
			}
			otherlv_13='{'
			{
				newLeafNode(otherlv_13, grammarAccess.getCommandsAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandsAccess().getHighlevelcommandHighLevelCommandParserRuleCall_6_2_0());
					}
					lv_highlevelcommand_14_0=ruleHighLevelCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandsRule());
						}
						add(
							$current,
							"highlevelcommand",
							lv_highlevelcommand_14_0,
							"diro.geodes.VcsFeatures.HighLevelCommand");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_15=','
				{
					newLeafNode(otherlv_15, grammarAccess.getCommandsAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCommandsAccess().getHighlevelcommandHighLevelCommandParserRuleCall_6_3_1_0());
						}
						lv_highlevelcommand_16_0=ruleHighLevelCommand
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommandsRule());
							}
							add(
								$current,
								"highlevelcommand",
								lv_highlevelcommand_16_0,
								"diro.geodes.VcsFeatures.HighLevelCommand");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_17='}'
			{
				newLeafNode(otherlv_17, grammarAccess.getCommandsAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
	)
;

// Entry rule entryRuleHistory
entryRuleHistory returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHistoryRule()); }
	iv_ruleHistory=ruleHistory
	{ $current=$iv_ruleHistory.current; }
	EOF;

// Rule History
ruleHistory returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHistoryAccess().getHistoryAction_0(),
					$current);
			}
		)
		otherlv_1='-'
		{
			newLeafNode(otherlv_1, grammarAccess.getHistoryAccess().getHyphenMinusKeyword_1());
		}
		(
			otherlv_2='labelType'
			{
				newLeafNode(otherlv_2, grammarAccess.getHistoryAccess().getLabelTypeKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHistoryAccess().getLabelTypeLabelTypeEnumRuleCall_2_1_0());
					}
					lv_labelType_3_0=ruleLabelType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHistoryRule());
						}
						set(
							$current,
							"labelType",
							lv_labelType_3_0,
							"diro.geodes.VcsFeatures.LabelType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='-'
		{
			newLeafNode(otherlv_4, grammarAccess.getHistoryAccess().getHyphenMinusKeyword_3());
		}
		(
			otherlv_5='commitHistoryRange'
			{
				newLeafNode(otherlv_5, grammarAccess.getHistoryAccess().getCommitHistoryRangeKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHistoryAccess().getCommitHistoryRangeEIntParserRuleCall_4_1_0());
					}
					lv_commitHistoryRange_6_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHistoryRule());
						}
						set(
							$current,
							"commitHistoryRange",
							lv_commitHistoryRange_6_0,
							"diro.geodes.VcsFeatures.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='-'
		{
			newLeafNode(otherlv_7, grammarAccess.getHistoryAccess().getHyphenMinusKeyword_5());
		}
		(
			otherlv_8='numberOfBranches'
			{
				newLeafNode(otherlv_8, grammarAccess.getHistoryAccess().getNumberOfBranchesKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHistoryAccess().getNumberOfBranchesEIntParserRuleCall_6_1_0());
					}
					lv_numberOfBranches_9_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHistoryRule());
						}
						set(
							$current,
							"numberOfBranches",
							lv_numberOfBranches_9_0,
							"diro.geodes.VcsFeatures.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleVersionUnit
entryRuleVersionUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVersionUnitRule()); }
	iv_ruleVersionUnit=ruleVersionUnit
	{ $current=$iv_ruleVersionUnit.current; }
	EOF;

// Rule VersionUnit
ruleVersionUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVersionUnitAccess().getVersionUnitAction_0(),
					$current);
			}
		)
		otherlv_1='-'
		{
			newLeafNode(otherlv_1, grammarAccess.getVersionUnitAccess().getHyphenMinusKeyword_1());
		}
		(
			otherlv_2='granularity'
			{
				newLeafNode(otherlv_2, grammarAccess.getVersionUnitAccess().getGranularityKeyword_2_0());
			}
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getVersionUnitAccess().getLeftCurlyBracketKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVersionUnitAccess().getGranularityVersionUnitTypeEnumRuleCall_2_2_0());
					}
					lv_granularity_4_0=ruleVersionUnitType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVersionUnitRule());
						}
						add(
							$current,
							"granularity",
							lv_granularity_4_0,
							"diro.geodes.VcsFeatures.VersionUnitType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getVersionUnitAccess().getCommaKeyword_2_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVersionUnitAccess().getGranularityVersionUnitTypeEnumRuleCall_2_3_1_0());
						}
						lv_granularity_6_0=ruleVersionUnitType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVersionUnitRule());
							}
							add(
								$current,
								"granularity",
								lv_granularity_6_0,
								"diro.geodes.VcsFeatures.VersionUnitType");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getVersionUnitAccess().getRightCurlyBracketKeyword_2_4());
			}
		)?
	)
;

// Entry rule entryRuleCollaborationStyle
entryRuleCollaborationStyle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollaborationStyleRule()); }
	iv_ruleCollaborationStyle=ruleCollaborationStyle
	{ $current=$iv_ruleCollaborationStyle.current; }
	EOF;

// Rule CollaborationStyle
ruleCollaborationStyle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCollaborationStyleAccess().getCollaborationStyleAction_0(),
					$current);
			}
		)
		otherlv_1='-'
		{
			newLeafNode(otherlv_1, grammarAccess.getCollaborationStyleAccess().getHyphenMinusKeyword_1());
		}
		(
			otherlv_2='collabStyle'
			{
				newLeafNode(otherlv_2, grammarAccess.getCollaborationStyleAccess().getCollabStyleKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollaborationStyleAccess().getCollabStyleCollaborationStyleTypeEnumRuleCall_2_1_0());
					}
					lv_collabStyle_3_0=ruleCollaborationStyleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollaborationStyleRule());
						}
						set(
							$current,
							"collabStyle",
							lv_collabStyle_3_0,
							"diro.geodes.VcsFeatures.CollaborationStyleType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDatabase
entryRuleDatabase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatabaseRule()); }
	iv_ruleDatabase=ruleDatabase
	{ $current=$iv_ruleDatabase.current; }
	EOF;

// Rule Database
ruleDatabase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDatabaseAccess().getDatabaseAction_0(),
					$current);
			}
		)
		otherlv_1='Database'
		{
			newLeafNode(otherlv_1, grammarAccess.getDatabaseAccess().getDatabaseKeyword_1());
		}
		otherlv_2='-'
		{
			newLeafNode(otherlv_2, grammarAccess.getDatabaseAccess().getHyphenMinusKeyword_2());
		}
		otherlv_3='ConnectionString'
		{
			newLeafNode(otherlv_3, grammarAccess.getDatabaseAccess().getConnectionStringKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatabaseAccess().getConnectionStringEStringParserRuleCall_4_0());
				}
				lv_connectionString_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatabaseRule());
					}
					set(
						$current,
						"connectionString",
						lv_connectionString_4_0,
						"diro.geodes.VcsFeatures.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='-'
		{
			newLeafNode(otherlv_5, grammarAccess.getDatabaseAccess().getHyphenMinusKeyword_5());
		}
		(
			otherlv_6='DatabaseType'
			{
				newLeafNode(otherlv_6, grammarAccess.getDatabaseAccess().getDatabaseTypeKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDatabaseAccess().getDatabaseTypeDatabaseTypeEnumRuleCall_6_1_0());
					}
					lv_DatabaseType_7_0=ruleDatabaseType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDatabaseRule());
						}
						set(
							$current,
							"DatabaseType",
							lv_DatabaseType_7_0,
							"diro.geodes.VcsFeatures.DatabaseType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleHighLevelCommand
entryRuleHighLevelCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHighLevelCommandRule()); }
	iv_ruleHighLevelCommand=ruleHighLevelCommand
	{ $current=$iv_ruleHighLevelCommand.current; }
	EOF;

// Rule HighLevelCommand
ruleHighLevelCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHighLevelCommandAccess().getHighLevelCommandAction_0(),
					$current);
			}
		)
		otherlv_1='HighLevelCommand'
		{
			newLeafNode(otherlv_1, grammarAccess.getHighLevelCommandAccess().getHighLevelCommandKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHighLevelCommandAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHighLevelCommandRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"diro.geodes.VcsFeatures.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='lowlevelcommand'
			{
				newLeafNode(otherlv_3, grammarAccess.getHighLevelCommandAccess().getLowlevelcommandKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getHighLevelCommandAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHighLevelCommandRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getHighLevelCommandAccess().getLowlevelcommandLowLevelCommandCrossReference_3_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getHighLevelCommandAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHighLevelCommandRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getHighLevelCommandAccess().getLowlevelcommandLowLevelCommandCrossReference_3_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getHighLevelCommandAccess().getRightParenthesisKeyword_3_4());
			}
		)?
	)
;

// Entry rule entryRuleLowLevelCommand
entryRuleLowLevelCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLowLevelCommandRule()); }
	iv_ruleLowLevelCommand=ruleLowLevelCommand
	{ $current=$iv_ruleLowLevelCommand.current; }
	EOF;

// Rule LowLevelCommand
ruleLowLevelCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LowLevelCommand'
		{
			newLeafNode(otherlv_0, grammarAccess.getLowLevelCommandAccess().getLowLevelCommandKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLowLevelCommandAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLowLevelCommandRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"diro.geodes.VcsFeatures.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getLowLevelCommandAccess().getLeftParenthesisKeyword_2());
		}
		otherlv_3='command'
		{
			newLeafNode(otherlv_3, grammarAccess.getLowLevelCommandAccess().getCommandKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLowLevelCommandAccess().getCommandLowCommandsEnumRuleCall_4_0());
				}
				lv_command_4_0=ruleLowCommands
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLowLevelCommandRule());
					}
					set(
						$current,
						"command",
						lv_command_4_0,
						"diro.geodes.VcsFeatures.LowCommands");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getLowLevelCommandAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Rule MergeStrategy
ruleMergeStrategy returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='DSMCompare'
			{
				$current = grammarAccess.getMergeStrategyAccess().getDSMCompareEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMergeStrategyAccess().getDSMCompareEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='GitDiff'
			{
				$current = grammarAccess.getMergeStrategyAccess().getGitDiffEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMergeStrategyAccess().getGitDiffEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule LowCommands
ruleLowCommands returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Add'
			{
				$current = grammarAccess.getLowCommandsAccess().getAddEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLowCommandsAccess().getAddEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Checkout'
			{
				$current = grammarAccess.getLowCommandsAccess().getCheckoutEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLowCommandsAccess().getCheckoutEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='CheckoutCreate'
			{
				$current = grammarAccess.getLowCommandsAccess().getCheckoutCreateEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getLowCommandsAccess().getCheckoutCreateEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Clone'
			{
				$current = grammarAccess.getLowCommandsAccess().getCloneEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getLowCommandsAccess().getCloneEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Commit'
			{
				$current = grammarAccess.getLowCommandsAccess().getCommitEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getLowCommandsAccess().getCommitEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='CherryPick'
			{
				$current = grammarAccess.getLowCommandsAccess().getCherryPickEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getLowCommandsAccess().getCherryPickEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='CreateBranch'
			{
				$current = grammarAccess.getLowCommandsAccess().getCreateBranchEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getLowCommandsAccess().getCreateBranchEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='Fetch'
			{
				$current = grammarAccess.getLowCommandsAccess().getFetchEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getLowCommandsAccess().getFetchEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='Init'
			{
				$current = grammarAccess.getLowCommandsAccess().getInitEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getLowCommandsAccess().getInitEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='Pull'
			{
				$current = grammarAccess.getLowCommandsAccess().getPullEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getLowCommandsAccess().getPullEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='Push'
			{
				$current = grammarAccess.getLowCommandsAccess().getPushEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getLowCommandsAccess().getPushEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='RemoteAdd'
			{
				$current = grammarAccess.getLowCommandsAccess().getRemoteAddEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getLowCommandsAccess().getRemoteAddEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='Rm'
			{
				$current = grammarAccess.getLowCommandsAccess().getRmEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getLowCommandsAccess().getRmEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='Log'
			{
				$current = grammarAccess.getLowCommandsAccess().getLogEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getLowCommandsAccess().getLogEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14='Open'
			{
				$current = grammarAccess.getLowCommandsAccess().getOpenEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getLowCommandsAccess().getOpenEnumLiteralDeclaration_14());
			}
		)
	)
;

// Rule LabelType
ruleLabelType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Unique'
			{
				$current = grammarAccess.getLabelTypeAccess().getUniqueEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLabelTypeAccess().getUniqueEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='CommitHash'
			{
				$current = grammarAccess.getLabelTypeAccess().getCommitHashEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLabelTypeAccess().getCommitHashEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Label'
			{
				$current = grammarAccess.getLabelTypeAccess().getLabelEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getLabelTypeAccess().getLabelEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule VersionUnitType
ruleVersionUnitType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Line'
			{
				$current = grammarAccess.getVersionUnitTypeAccess().getLineEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getVersionUnitTypeAccess().getLineEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Semantic'
			{
				$current = grammarAccess.getVersionUnitTypeAccess().getSemanticEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getVersionUnitTypeAccess().getSemanticEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='File'
			{
				$current = grammarAccess.getVersionUnitTypeAccess().getFileEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getVersionUnitTypeAccess().getFileEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Element'
			{
				$current = grammarAccess.getVersionUnitTypeAccess().getElementEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getVersionUnitTypeAccess().getElementEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule CollaborationStyleType
ruleCollaborationStyleType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='LocalOnly'
			{
				$current = grammarAccess.getCollaborationStyleTypeAccess().getLocalOnlyEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCollaborationStyleTypeAccess().getLocalOnlyEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Remote'
			{
				$current = grammarAccess.getCollaborationStyleTypeAccess().getRemoteEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCollaborationStyleTypeAccess().getRemoteEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule DatabaseType
ruleDatabaseType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='MongoDB'
			{
				$current = grammarAccess.getDatabaseTypeAccess().getMongoDBEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDatabaseTypeAccess().getMongoDBEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='XMI'
			{
				$current = grammarAccess.getDatabaseTypeAccess().getXMIEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDatabaseTypeAccess().getXMIEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Neo4J'
			{
				$current = grammarAccess.getDatabaseTypeAccess().getNeo4JEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDatabaseTypeAccess().getNeo4JEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='SQL'
			{
				$current = grammarAccess.getDatabaseTypeAccess().getSQLEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDatabaseTypeAccess().getSQLEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
