package library.dialogs;

import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class CloneDialogGenerator {
  public CharSequence generate() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package dialogs;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import java.util.Arrays;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.eclipse.swt.SWT;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.layout.GridData;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.layout.GridLayout;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Combo;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Composite;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Control;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Label;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Shell;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Text;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class CloneDialog extends PathDialog {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Label remoteURLLabel;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Text remoteURLText;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Label cloneBranchesLabel;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Combo cloneBranchesCombo;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Label usernameLabel;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Text usernameText;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Label passwordLabel;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Text passwordText;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String remoteURL;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Boolean cloneBranches;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String username;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String password;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Label localURLLabel;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Text localURLText;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String localURL;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public CloneDialog(Shell parentShell) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("super(parentShell, \"Give a path to a file that you wish to start versioning, within a repository.\",");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("\"Select a file to version\");");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected Control createDialogArea(Composite parent) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("super.createDialogArea(parent);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("setMessage(message);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("setTitle(title);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Composite area = (Composite) super.createDialogArea(parent);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// Main container in which text labels can be inserted");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Composite container = new Composite(area, SWT.NONE);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("container.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("GridLayout layout = new GridLayout(2, false);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("container.setLayout(layout);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// Create the first label and its text box");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("localURLLabel = createLabel(container, \"Local directory where to initialize the repository: \");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("localURLText = createText(container, true, false);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// URL for remote repository");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("remoteURLLabel = createLabel(container, \"URL of the remote repository: \");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("remoteURLText = createText(container, true, false);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// Whether the user wants to fetch all the branches at the start or not");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("cloneBranchesLabel = createLabel(container, \"Do you want to clone all the branches? \");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("cloneBranchesCombo = createComboButtons(container, Arrays.asList(\"True\", \"False\"));");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// TODO Change this with a proper credential manager support");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// Username to connect to the remote repository");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("usernameLabel = createLabel(container, \"Username: \");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("usernameText = createText(container, true, false);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// Password to connect to the remote repository");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("passwordLabel = createLabel(container, \"Password: \");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("passwordText = createText(container, true, false);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return null;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// Save content of the Text fields because they get disposed");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// as soon as the Dialog closes");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected void saveInput() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("localURL = localURLText.getText();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("remoteURL = remoteURLText.getText();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (cloneBranchesCombo.getItem(cloneBranchesCombo.getSelectionIndex()) == \"True\") {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("cloneBranches = true;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("cloneBranches = false;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("username = usernameText.getText();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("password = passwordText.getText();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String getRemoteURL() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return remoteURL;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public Boolean getCloneBranches() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return cloneBranches;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String getUsername() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return username;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String getPassword() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return password;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String getLocalURL() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return localURL;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    return _builder;
  }
}
