package library.dialogs;

import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class AddDialogGenerator implements DialogGenerator {
  @Override
  public CharSequence generate() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package dialogs;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Composite;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Control;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Label;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Shell;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Text;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("/* TODO Change this dialog to something that can accept multiple paths (List)");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* I could fetch the path to the registered repositories and then print that into a combo box.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Depending on the selection, I could show a list of all the files the user can choose. From there, combine the strings together and pass it along to the AddCommand.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* */");
    _builder.newLine();
    _builder.append("public class AddDialog extends PathDialog {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Text pathToRepo;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String path;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Label pathToLabel;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public AddDialog(Shell shell) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("super(shell, \"Give a path to a file that you wish to start versioning, within a repository.\",");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("\"Select a file to version\");");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected Control createDialogArea(Composite parent) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Composite container = (Composite) super.createDialogArea(parent);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("pathToLabel = createLabel(container, \"Path to the file to add: \");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("pathToRepo = createText(container, true, false);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return super.createDialogArea(parent);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// Save content of the Text fields because they get disposed");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// as soon as the Dialog closes");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected void saveInput() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("path = pathToRepo.getText();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String getPathToRepo() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return path;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    return _builder;
  }
}
