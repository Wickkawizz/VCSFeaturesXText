package library.dialogs;

import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class FetchDialogGenerator implements DialogGenerator {
  @Override
  public CharSequence generate() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package dialogs;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import java.util.List;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Combo;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Composite;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Control;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Label;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Shell;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Text;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class FetchDialog extends DialogUtils {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Combo comboRemotes;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Combo comboBranches;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private List<String> branches;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private List<String> remotes;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Text usernameText;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Text passwordText;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String username;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String password;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String branchSelection;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String remoteSelection;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/*");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* TODO Make a list of list for the branches. The list of branches should change");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* depending on which remote has been chosen. i.e. If \"origin\" is selected, only");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* those branches should be shown to the user.");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public FetchDialog(Shell shell, List<String> remotes, List<String> branches) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("super(shell, \"Fetch command is used to update a specific branch from the remote repository (upstream)\",");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("\"Please select a branch to update\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.branches = branches;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.remotes = remotes;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected Control createDialogArea(Composite parent) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Composite area = initMainArea(parent);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Composite container = mainContainer(area);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("createLabel(container, \"Please select from which remote you would like to fetch: \");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("comboRemotes = createComboButtons(container, remotes);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// Create the first label and its combo box");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("createLabel(container, \"Please select which branch you would like to fetch: \");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("comboBranches = createComboButtons(container, branches);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// TODO Change this with a proper credential manager support");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// Username to connect to the remote repository");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Label usernameLabel = createLabel(container, \"Username: \");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("usernameText = createText(container, true, false);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// Password to connect to the remote repository");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Label passwordLabel = createLabel(container, \"Password: \");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("passwordText = createText(container, true, false);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return super.createDialogArea(parent);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected void saveInput() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("branchSelection = comboBranches.getItem(comboBranches.getSelectionIndex());");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("remoteSelection = comboRemotes.getItem(comboRemotes.getSelectionIndex());");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("username = usernameText.getText();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("password = passwordText.getText();");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String getBranchSelection() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return branchSelection;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String getRemoteSelection() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return remoteSelection;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String getUsername() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return username;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String getPassword() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return password;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    return _builder;
  }
}
