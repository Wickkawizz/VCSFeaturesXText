package library.dialogs;

import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class CreateBranchDialogGenerator {
  public CharSequence generate() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package dialogs;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Composite;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Control;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Shell;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Text;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class CreateBranchDialog extends DialogUtils {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Text branchText;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String branch;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public CreateBranchDialog(Shell parentShell) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("super(parentShell,");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("\"CreateBranch is used to create a new branch with the current HEAD, without switching (checkout) to it.\",");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("\"Type the name of the new branch.\");");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected Control createDialogArea(Composite parent) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Composite area = initMainArea(parent);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Composite container = mainContainer(area);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// Create another label with a text box");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("createLabel(container, \"Branch name: \");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("branchText = createText(container, true, false);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return super.createDialogArea(parent);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected void saveInput() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("branch = branchText.getText();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String getBranch() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return branch;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    return _builder;
  }
}
