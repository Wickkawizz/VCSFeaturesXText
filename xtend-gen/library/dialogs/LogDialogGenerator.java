package library.dialogs;

import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class LogDialogGenerator {
  public CharSequence generate() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package dialogs;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.eclipse.jgit.revwalk.RevCommit;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.SWT;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.layout.GridData;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.layout.GridLayout;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Composite;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Control;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Shell;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class LogDialog extends DialogUtils {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Iterable<RevCommit> commits;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public LogDialog(Shell shell, Iterable<RevCommit> commits) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("super(shell, \"Log is used to get a list of all the commits from the repository\",");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("\"Here is the list of all commits in order\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.commits = commits;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected void configureShell(Shell newShell) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("super.configureShell(newShell);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("newShell.setText(\"LogDialog\");");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected Control createDialogArea(Composite parent) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("setMessage(message);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("setTitle(title);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Composite area = (Composite) super.createDialogArea(parent);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// Main container in which text labels can be inserted");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Composite container = new Composite(area, SWT.NONE);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("container.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("GridLayout layout = new GridLayout(2, false);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("container.setLayout(layout);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// Create the first label and its combo box");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("for (RevCommit revCommit : commits) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("createLabel(container, \"Commit ID: \" + revCommit.getName() + \" Commit Time: \" + revCommit.getCommitTime()");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("+ \" Parent Count: \" + revCommit.getParentCount());");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return super.createDialogArea(parent);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected void saveInput() {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    return _builder;
  }
}
