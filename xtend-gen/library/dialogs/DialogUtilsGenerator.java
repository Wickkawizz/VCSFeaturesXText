package library.dialogs;

import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class DialogUtilsGenerator implements DialogGenerator {
  @Override
  public CharSequence generate() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package dialogs;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import java.util.List;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.eclipse.jface.dialogs.TitleAreaDialog;");
    _builder.newLine();
    _builder.append("import org.eclipse.jface.layout.GridDataFactory;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.SWT;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.layout.GridData;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.layout.GridLayout;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Combo;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Composite;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Label;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Shell;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Text;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public abstract class DialogUtils extends TitleAreaDialog {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected String message;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected String title;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public DialogUtils(Shell parentShell, String message, String title) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("super(parentShell);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.message = message;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.title = title;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected Combo createComboButtons(Composite container, List<String> elements) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// https://flylib.com/books/en/1.70.1/combos_and_lists.html");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Combo combo = new Combo(container, SWT.NONE);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("for (String element : elements) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("combo.add(element);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return combo;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected Label createLabel(Composite container, String text) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Label label = new Label(container, SWT.NONE);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("label.setText(text);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// This might cause problems if done in the super class. Might need to separate");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// it into it\'s own method that can be called by the child.");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("GridDataFactory.fillDefaults().grab(false, false).applyTo(label);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return label;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected Text createText(Composite container, Boolean grabHorizontal, Boolean grabVertical) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Text textBox = new Text(container, SWT.BORDER);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("GridDataFactory.fillDefaults().grab(grabHorizontal, grabVertical).applyTo(textBox);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return textBox;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected Composite mainContainer(Composite area) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// Main container in which text labels can be inserted");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Composite container = new Composite(area, SWT.NONE);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("container.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("GridLayout layout = new GridLayout(2, false);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("container.setLayout(layout);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return container;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected Composite initMainArea(Composite parent) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("setMessage(message);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("setTitle(title);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Composite area = (Composite) super.createDialogArea(parent);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return area;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// Save content of the Text fields because they get disposed");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// as soon as the Dialog closes");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected abstract void saveInput();");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected void okPressed() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("saveInput();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("super.okPressed();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
}
