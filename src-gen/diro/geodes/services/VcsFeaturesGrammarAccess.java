/*
 * generated by Xtext 2.32.0
 */
package diro.geodes.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class VcsFeaturesGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class VCSFeaturesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "diro.geodes.VcsFeatures.VCSFeatures");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVCSFeaturesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVCSFeaturesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cNumberSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCOMMANDSKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cCommandsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCommandsCommandsParserRuleCall_4_1_0 = (RuleCall)cCommandsAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cCommandsAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cCommandsCommandsParserRuleCall_4_2_1_0 = (RuleCall)cCommandsAssignment_4_2_1.eContents().get(0);
		private final Keyword cNumberSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cHISTORYKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cHistoryAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cHistoryHistoryParserRuleCall_6_1_0 = (RuleCall)cHistoryAssignment_6_1.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cHistoryAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final RuleCall cHistoryHistoryParserRuleCall_6_2_1_0 = (RuleCall)cHistoryAssignment_6_2_1.eContents().get(0);
		private final Keyword cNumberSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cVERSIONNINGKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cVersionunitAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cVersionunitVersionUnitParserRuleCall_8_1_0 = (RuleCall)cVersionunitAssignment_8_1.eContents().get(0);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Keyword cCommaKeyword_8_2_0 = (Keyword)cGroup_8_2.eContents().get(0);
		private final Assignment cVersionunitAssignment_8_2_1 = (Assignment)cGroup_8_2.eContents().get(1);
		private final RuleCall cVersionunitVersionUnitParserRuleCall_8_2_1_0 = (RuleCall)cVersionunitAssignment_8_2_1.eContents().get(0);
		private final Keyword cNumberSignKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCOLLABORATIONKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cSTYLEKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cCollaborationstyleAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cCollaborationstyleCollaborationStyleParserRuleCall_10_2_0 = (RuleCall)cCollaborationstyleAssignment_10_2.eContents().get(0);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cCommaKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Assignment cCollaborationstyleAssignment_10_3_1 = (Assignment)cGroup_10_3.eContents().get(1);
		private final RuleCall cCollaborationstyleCollaborationStyleParserRuleCall_10_3_1_0 = (RuleCall)cCollaborationstyleAssignment_10_3_1.eContents().get(0);
		private final Keyword cNumberSignKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cDATABASESKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cDatabaseAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cDatabaseDatabaseParserRuleCall_12_1_0 = (RuleCall)cDatabaseAssignment_12_1.eContents().get(0);
		private final Assignment cDatabaseAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cDatabaseDatabaseParserRuleCall_12_2_0 = (RuleCall)cDatabaseAssignment_12_2.eContents().get(0);
		
		//VCSFeatures returns VCSFeatures:
		//    {VCSFeatures}
		//    'VCSFeatures'
		//    name=EString
		//        '#' ('COMMANDS'  commands+=Commands ( "," commands+=Commands)*  )?
		//        '#' ('HISTORY'  history+=History ( "," history+=History)*  )?
		//        '#' ('VERSIONNING'  versionunit+=VersionUnit ( "," versionunit+=VersionUnit)*  )?
		//        '#' ('COLLABORATION' 'STYLE'  collaborationstyle+=CollaborationStyle ( "," collaborationstyle+=CollaborationStyle)* )?
		//        '#' ('DATABASES'  database+=Database (database+=Database)*  )?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{VCSFeatures}
		//'VCSFeatures'
		//name=EString
		//    '#' ('COMMANDS'  commands+=Commands ( "," commands+=Commands)*  )?
		//    '#' ('HISTORY'  history+=History ( "," history+=History)*  )?
		//    '#' ('VERSIONNING'  versionunit+=VersionUnit ( "," versionunit+=VersionUnit)*  )?
		//    '#' ('COLLABORATION' 'STYLE'  collaborationstyle+=CollaborationStyle ( "," collaborationstyle+=CollaborationStyle)* )?
		//    '#' ('DATABASES'  database+=Database (database+=Database)*  )?
		public Group getGroup() { return cGroup; }
		
		//{VCSFeatures}
		public Action getVCSFeaturesAction_0() { return cVCSFeaturesAction_0; }
		
		//'VCSFeatures'
		public Keyword getVCSFeaturesKeyword_1() { return cVCSFeaturesKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'#'
		public Keyword getNumberSignKeyword_3() { return cNumberSignKeyword_3; }
		
		//('COMMANDS'  commands+=Commands ( "," commands+=Commands)*  )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'COMMANDS'
		public Keyword getCOMMANDSKeyword_4_0() { return cCOMMANDSKeyword_4_0; }
		
		//commands+=Commands
		public Assignment getCommandsAssignment_4_1() { return cCommandsAssignment_4_1; }
		
		//Commands
		public RuleCall getCommandsCommandsParserRuleCall_4_1_0() { return cCommandsCommandsParserRuleCall_4_1_0; }
		
		//( "," commands+=Commands)*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//commands+=Commands
		public Assignment getCommandsAssignment_4_2_1() { return cCommandsAssignment_4_2_1; }
		
		//Commands
		public RuleCall getCommandsCommandsParserRuleCall_4_2_1_0() { return cCommandsCommandsParserRuleCall_4_2_1_0; }
		
		//'#'
		public Keyword getNumberSignKeyword_5() { return cNumberSignKeyword_5; }
		
		//('HISTORY'  history+=History ( "," history+=History)*  )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'HISTORY'
		public Keyword getHISTORYKeyword_6_0() { return cHISTORYKeyword_6_0; }
		
		//history+=History
		public Assignment getHistoryAssignment_6_1() { return cHistoryAssignment_6_1; }
		
		//History
		public RuleCall getHistoryHistoryParserRuleCall_6_1_0() { return cHistoryHistoryParserRuleCall_6_1_0; }
		
		//( "," history+=History)*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//history+=History
		public Assignment getHistoryAssignment_6_2_1() { return cHistoryAssignment_6_2_1; }
		
		//History
		public RuleCall getHistoryHistoryParserRuleCall_6_2_1_0() { return cHistoryHistoryParserRuleCall_6_2_1_0; }
		
		//'#'
		public Keyword getNumberSignKeyword_7() { return cNumberSignKeyword_7; }
		
		//('VERSIONNING'  versionunit+=VersionUnit ( "," versionunit+=VersionUnit)*  )?
		public Group getGroup_8() { return cGroup_8; }
		
		//'VERSIONNING'
		public Keyword getVERSIONNINGKeyword_8_0() { return cVERSIONNINGKeyword_8_0; }
		
		//versionunit+=VersionUnit
		public Assignment getVersionunitAssignment_8_1() { return cVersionunitAssignment_8_1; }
		
		//VersionUnit
		public RuleCall getVersionunitVersionUnitParserRuleCall_8_1_0() { return cVersionunitVersionUnitParserRuleCall_8_1_0; }
		
		//( "," versionunit+=VersionUnit)*
		public Group getGroup_8_2() { return cGroup_8_2; }
		
		//","
		public Keyword getCommaKeyword_8_2_0() { return cCommaKeyword_8_2_0; }
		
		//versionunit+=VersionUnit
		public Assignment getVersionunitAssignment_8_2_1() { return cVersionunitAssignment_8_2_1; }
		
		//VersionUnit
		public RuleCall getVersionunitVersionUnitParserRuleCall_8_2_1_0() { return cVersionunitVersionUnitParserRuleCall_8_2_1_0; }
		
		//'#'
		public Keyword getNumberSignKeyword_9() { return cNumberSignKeyword_9; }
		
		//('COLLABORATION' 'STYLE'  collaborationstyle+=CollaborationStyle ( "," collaborationstyle+=CollaborationStyle)* )?
		public Group getGroup_10() { return cGroup_10; }
		
		//'COLLABORATION'
		public Keyword getCOLLABORATIONKeyword_10_0() { return cCOLLABORATIONKeyword_10_0; }
		
		//'STYLE'
		public Keyword getSTYLEKeyword_10_1() { return cSTYLEKeyword_10_1; }
		
		//collaborationstyle+=CollaborationStyle
		public Assignment getCollaborationstyleAssignment_10_2() { return cCollaborationstyleAssignment_10_2; }
		
		//CollaborationStyle
		public RuleCall getCollaborationstyleCollaborationStyleParserRuleCall_10_2_0() { return cCollaborationstyleCollaborationStyleParserRuleCall_10_2_0; }
		
		//( "," collaborationstyle+=CollaborationStyle)*
		public Group getGroup_10_3() { return cGroup_10_3; }
		
		//","
		public Keyword getCommaKeyword_10_3_0() { return cCommaKeyword_10_3_0; }
		
		//collaborationstyle+=CollaborationStyle
		public Assignment getCollaborationstyleAssignment_10_3_1() { return cCollaborationstyleAssignment_10_3_1; }
		
		//CollaborationStyle
		public RuleCall getCollaborationstyleCollaborationStyleParserRuleCall_10_3_1_0() { return cCollaborationstyleCollaborationStyleParserRuleCall_10_3_1_0; }
		
		//'#'
		public Keyword getNumberSignKeyword_11() { return cNumberSignKeyword_11; }
		
		//('DATABASES'  database+=Database (database+=Database)*  )?
		public Group getGroup_12() { return cGroup_12; }
		
		//'DATABASES'
		public Keyword getDATABASESKeyword_12_0() { return cDATABASESKeyword_12_0; }
		
		//database+=Database
		public Assignment getDatabaseAssignment_12_1() { return cDatabaseAssignment_12_1; }
		
		//Database
		public RuleCall getDatabaseDatabaseParserRuleCall_12_1_0() { return cDatabaseDatabaseParserRuleCall_12_1_0; }
		
		//(database+=Database)*
		public Assignment getDatabaseAssignment_12_2() { return cDatabaseAssignment_12_2; }
		
		//Database
		public RuleCall getDatabaseDatabaseParserRuleCall_12_2_0() { return cDatabaseDatabaseParserRuleCall_12_2_0; }
	}
	public class CommandsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "diro.geodes.VcsFeatures.Commands");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCommandsAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cMergeKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cToolKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cMergeStrategyAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cMergeStrategyMergeStrategyEnumRuleCall_1_2_0 = (RuleCall)cMergeStrategyAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cBasicKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cCommandKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cDeclarationKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cLowlevelcommandAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cLowlevelcommandLowLevelCommandParserRuleCall_2_3_0 = (RuleCall)cLowlevelcommandAssignment_2_3.eContents().get(0);
		private final Assignment cLowlevelcommandAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final RuleCall cLowlevelcommandLowLevelCommandParserRuleCall_2_4_0 = (RuleCall)cLowlevelcommandAssignment_2_4.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSuperKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cCommandKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cDeclarationKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cHighlevelcommandAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cHighlevelcommandHighLevelCommandParserRuleCall_3_3_0 = (RuleCall)cHighlevelcommandAssignment_3_3.eContents().get(0);
		private final Assignment cHighlevelcommandAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final RuleCall cHighlevelcommandHighLevelCommandParserRuleCall_3_4_0 = (RuleCall)cHighlevelcommandAssignment_3_4.eContents().get(0);
		
		//Commands returns Commands:
		//    {Commands}
		//         ('Merge' 'tool:' mergeStrategy=MergeStrategy)?
		//         ('Basic' 'command' 'declaration:' lowlevelcommand+=LowLevelCommand (lowlevelcommand+=LowLevelCommand)* )?
		//         ('Super' 'command' 'declaration:' highlevelcommand+=HighLevelCommand (highlevelcommand+=HighLevelCommand)* )?
		//        ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Commands}
		//     ('Merge' 'tool:' mergeStrategy=MergeStrategy)?
		//     ('Basic' 'command' 'declaration:' lowlevelcommand+=LowLevelCommand (lowlevelcommand+=LowLevelCommand)* )?
		//     ('Super' 'command' 'declaration:' highlevelcommand+=HighLevelCommand (highlevelcommand+=HighLevelCommand)* )?
		public Group getGroup() { return cGroup; }
		
		//{Commands}
		public Action getCommandsAction_0() { return cCommandsAction_0; }
		
		//('Merge' 'tool:' mergeStrategy=MergeStrategy)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'Merge'
		public Keyword getMergeKeyword_1_0() { return cMergeKeyword_1_0; }
		
		//'tool:'
		public Keyword getToolKeyword_1_1() { return cToolKeyword_1_1; }
		
		//mergeStrategy=MergeStrategy
		public Assignment getMergeStrategyAssignment_1_2() { return cMergeStrategyAssignment_1_2; }
		
		//MergeStrategy
		public RuleCall getMergeStrategyMergeStrategyEnumRuleCall_1_2_0() { return cMergeStrategyMergeStrategyEnumRuleCall_1_2_0; }
		
		//('Basic' 'command' 'declaration:' lowlevelcommand+=LowLevelCommand (lowlevelcommand+=LowLevelCommand)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Basic'
		public Keyword getBasicKeyword_2_0() { return cBasicKeyword_2_0; }
		
		//'command'
		public Keyword getCommandKeyword_2_1() { return cCommandKeyword_2_1; }
		
		//'declaration:'
		public Keyword getDeclarationKeyword_2_2() { return cDeclarationKeyword_2_2; }
		
		//lowlevelcommand+=LowLevelCommand
		public Assignment getLowlevelcommandAssignment_2_3() { return cLowlevelcommandAssignment_2_3; }
		
		//LowLevelCommand
		public RuleCall getLowlevelcommandLowLevelCommandParserRuleCall_2_3_0() { return cLowlevelcommandLowLevelCommandParserRuleCall_2_3_0; }
		
		//(lowlevelcommand+=LowLevelCommand)*
		public Assignment getLowlevelcommandAssignment_2_4() { return cLowlevelcommandAssignment_2_4; }
		
		//LowLevelCommand
		public RuleCall getLowlevelcommandLowLevelCommandParserRuleCall_2_4_0() { return cLowlevelcommandLowLevelCommandParserRuleCall_2_4_0; }
		
		//('Super' 'command' 'declaration:' highlevelcommand+=HighLevelCommand (highlevelcommand+=HighLevelCommand)* )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Super'
		public Keyword getSuperKeyword_3_0() { return cSuperKeyword_3_0; }
		
		//'command'
		public Keyword getCommandKeyword_3_1() { return cCommandKeyword_3_1; }
		
		//'declaration:'
		public Keyword getDeclarationKeyword_3_2() { return cDeclarationKeyword_3_2; }
		
		//highlevelcommand+=HighLevelCommand
		public Assignment getHighlevelcommandAssignment_3_3() { return cHighlevelcommandAssignment_3_3; }
		
		//HighLevelCommand
		public RuleCall getHighlevelcommandHighLevelCommandParserRuleCall_3_3_0() { return cHighlevelcommandHighLevelCommandParserRuleCall_3_3_0; }
		
		//(highlevelcommand+=HighLevelCommand)*
		public Assignment getHighlevelcommandAssignment_3_4() { return cHighlevelcommandAssignment_3_4; }
		
		//HighLevelCommand
		public RuleCall getHighlevelcommandHighLevelCommandParserRuleCall_3_4_0() { return cHighlevelcommandHighLevelCommandParserRuleCall_3_4_0; }
	}
	public class HistoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "diro.geodes.VcsFeatures.History");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHistoryAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cIdentifyingKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLabelKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cLabelTypeAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cLabelTypeLabelTypeEnumRuleCall_1_2_0 = (RuleCall)cLabelTypeAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cVersionKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cHistoryKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cBacklogKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cCommitHistoryRangeAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cCommitHistoryRangeEIntParserRuleCall_2_3_0 = (RuleCall)cCommitHistoryRangeAssignment_2_3.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cMaximumKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cNumberKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cOfKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Keyword cBranchesKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cNumberOfBranchesAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final RuleCall cNumberOfBranchesEIntParserRuleCall_3_4_0 = (RuleCall)cNumberOfBranchesAssignment_3_4.eContents().get(0);
		
		//History returns History:
		//    {History}
		//        ('Identifying' 'label:' labelType=LabelType)?
		//        ('Version' 'history' 'backlog:' commitHistoryRange=EInt)?
		//        ('Maximum' 'number' 'of' 'branches:' numberOfBranches=EInt)?
		//        ;
		@Override public ParserRule getRule() { return rule; }
		
		//{History}
		//    ('Identifying' 'label:' labelType=LabelType)?
		//    ('Version' 'history' 'backlog:' commitHistoryRange=EInt)?
		//    ('Maximum' 'number' 'of' 'branches:' numberOfBranches=EInt)?
		public Group getGroup() { return cGroup; }
		
		//{History}
		public Action getHistoryAction_0() { return cHistoryAction_0; }
		
		//('Identifying' 'label:' labelType=LabelType)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'Identifying'
		public Keyword getIdentifyingKeyword_1_0() { return cIdentifyingKeyword_1_0; }
		
		//'label:'
		public Keyword getLabelKeyword_1_1() { return cLabelKeyword_1_1; }
		
		//labelType=LabelType
		public Assignment getLabelTypeAssignment_1_2() { return cLabelTypeAssignment_1_2; }
		
		//LabelType
		public RuleCall getLabelTypeLabelTypeEnumRuleCall_1_2_0() { return cLabelTypeLabelTypeEnumRuleCall_1_2_0; }
		
		//('Version' 'history' 'backlog:' commitHistoryRange=EInt)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Version'
		public Keyword getVersionKeyword_2_0() { return cVersionKeyword_2_0; }
		
		//'history'
		public Keyword getHistoryKeyword_2_1() { return cHistoryKeyword_2_1; }
		
		//'backlog:'
		public Keyword getBacklogKeyword_2_2() { return cBacklogKeyword_2_2; }
		
		//commitHistoryRange=EInt
		public Assignment getCommitHistoryRangeAssignment_2_3() { return cCommitHistoryRangeAssignment_2_3; }
		
		//EInt
		public RuleCall getCommitHistoryRangeEIntParserRuleCall_2_3_0() { return cCommitHistoryRangeEIntParserRuleCall_2_3_0; }
		
		//('Maximum' 'number' 'of' 'branches:' numberOfBranches=EInt)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Maximum'
		public Keyword getMaximumKeyword_3_0() { return cMaximumKeyword_3_0; }
		
		//'number'
		public Keyword getNumberKeyword_3_1() { return cNumberKeyword_3_1; }
		
		//'of'
		public Keyword getOfKeyword_3_2() { return cOfKeyword_3_2; }
		
		//'branches:'
		public Keyword getBranchesKeyword_3_3() { return cBranchesKeyword_3_3; }
		
		//numberOfBranches=EInt
		public Assignment getNumberOfBranchesAssignment_3_4() { return cNumberOfBranchesAssignment_3_4; }
		
		//EInt
		public RuleCall getNumberOfBranchesEIntParserRuleCall_3_4_0() { return cNumberOfBranchesEIntParserRuleCall_3_4_0; }
	}
	public class VersionUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "diro.geodes.VcsFeatures.VersionUnit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVersionUnitAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDetailKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLevelKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cGranularityAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cGranularityVersionUnitTypeEnumRuleCall_3_0_0 = (RuleCall)cGranularityAssignment_3_0.eContents().get(0);
		private final Assignment cGranularityAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cGranularityVersionUnitTypeEnumRuleCall_3_1_0 = (RuleCall)cGranularityAssignment_3_1.eContents().get(0);
		
		//VersionUnit returns VersionUnit:
		//    {VersionUnit}
		//        'Detail' 'level:' (granularity+=VersionUnitType (granularity+=VersionUnitType)* )?
		//        ;
		@Override public ParserRule getRule() { return rule; }
		
		//{VersionUnit}
		//    'Detail' 'level:' (granularity+=VersionUnitType (granularity+=VersionUnitType)* )?
		public Group getGroup() { return cGroup; }
		
		//{VersionUnit}
		public Action getVersionUnitAction_0() { return cVersionUnitAction_0; }
		
		//'Detail'
		public Keyword getDetailKeyword_1() { return cDetailKeyword_1; }
		
		//'level:'
		public Keyword getLevelKeyword_2() { return cLevelKeyword_2; }
		
		//(granularity+=VersionUnitType (granularity+=VersionUnitType)* )?
		public Group getGroup_3() { return cGroup_3; }
		
		//granularity+=VersionUnitType
		public Assignment getGranularityAssignment_3_0() { return cGranularityAssignment_3_0; }
		
		//VersionUnitType
		public RuleCall getGranularityVersionUnitTypeEnumRuleCall_3_0_0() { return cGranularityVersionUnitTypeEnumRuleCall_3_0_0; }
		
		//(granularity+=VersionUnitType)*
		public Assignment getGranularityAssignment_3_1() { return cGranularityAssignment_3_1; }
		
		//VersionUnitType
		public RuleCall getGranularityVersionUnitTypeEnumRuleCall_3_1_0() { return cGranularityVersionUnitTypeEnumRuleCall_3_1_0; }
	}
	public class CollaborationStyleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "diro.geodes.VcsFeatures.CollaborationStyle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCollaborationStyleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cWorkingKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCollabStyleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCollabStyleCollaborationStyleTypeEnumRuleCall_2_0 = (RuleCall)cCollabStyleAssignment_2.eContents().get(0);
		
		//CollaborationStyle returns CollaborationStyle:
		//    {CollaborationStyle}
		//        'Working:' collabStyle=CollaborationStyleType
		//        ;
		@Override public ParserRule getRule() { return rule; }
		
		//{CollaborationStyle}
		//    'Working:' collabStyle=CollaborationStyleType
		public Group getGroup() { return cGroup; }
		
		//{CollaborationStyle}
		public Action getCollaborationStyleAction_0() { return cCollaborationStyleAction_0; }
		
		//'Working:'
		public Keyword getWorkingKeyword_1() { return cWorkingKeyword_1; }
		
		//collabStyle=CollaborationStyleType
		public Assignment getCollabStyleAssignment_2() { return cCollabStyleAssignment_2; }
		
		//CollaborationStyleType
		public RuleCall getCollabStyleCollaborationStyleTypeEnumRuleCall_2_0() { return cCollabStyleCollaborationStyleTypeEnumRuleCall_2_0; }
	}
	public class DatabaseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "diro.geodes.VcsFeatures.Database");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDatabaseAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDBKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDatabaseTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDatabaseTypeDatabaseTypeEnumRuleCall_2_0 = (RuleCall)cDatabaseTypeAssignment_2.eContents().get(0);
		private final Keyword cCommercialAtKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cConnectionStringAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cConnectionStringEStringParserRuleCall_4_0 = (RuleCall)cConnectionStringAssignment_4.eContents().get(0);
		
		//Database returns Database:
		//    {Database}
		//    'DB' DatabaseType=DatabaseType '@' connectionString=EString
		//        ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Database}
		//'DB' DatabaseType=DatabaseType '@' connectionString=EString
		public Group getGroup() { return cGroup; }
		
		//{Database}
		public Action getDatabaseAction_0() { return cDatabaseAction_0; }
		
		//'DB'
		public Keyword getDBKeyword_1() { return cDBKeyword_1; }
		
		//DatabaseType=DatabaseType
		public Assignment getDatabaseTypeAssignment_2() { return cDatabaseTypeAssignment_2; }
		
		//DatabaseType
		public RuleCall getDatabaseTypeDatabaseTypeEnumRuleCall_2_0() { return cDatabaseTypeDatabaseTypeEnumRuleCall_2_0; }
		
		//'@'
		public Keyword getCommercialAtKeyword_3() { return cCommercialAtKeyword_3; }
		
		//connectionString=EString
		public Assignment getConnectionStringAssignment_4() { return cConnectionStringAssignment_4; }
		
		//EString
		public RuleCall getConnectionStringEStringParserRuleCall_4_0() { return cConnectionStringEStringParserRuleCall_4_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "diro.geodes.VcsFeatures.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class HighLevelCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "diro.geodes.VcsFeatures.HighLevelCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHighLevelCommandAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSuperKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCommandKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameEStringParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cWithKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cLowlevelcommandAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cLowlevelcommandLowLevelCommandCrossReference_5_1_0 = (CrossReference)cLowlevelcommandAssignment_5_1.eContents().get(0);
		private final RuleCall cLowlevelcommandLowLevelCommandEStringParserRuleCall_5_1_0_1 = (RuleCall)cLowlevelcommandLowLevelCommandCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cLowlevelcommandAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final CrossReference cLowlevelcommandLowLevelCommandCrossReference_5_2_1_0 = (CrossReference)cLowlevelcommandAssignment_5_2_1.eContents().get(0);
		private final RuleCall cLowlevelcommandLowLevelCommandEStringParserRuleCall_5_2_1_0_1 = (RuleCall)cLowlevelcommandLowLevelCommandCrossReference_5_2_1_0.eContents().get(1);
		
		//HighLevelCommand returns HighLevelCommand:
		//    {HighLevelCommand}
		//    '-' 'Super' 'command' name=EString ( 'with' lowlevelcommand+=[LowLevelCommand|EString] ( "->" lowlevelcommand+=[LowLevelCommand|EString])* )?
		//        ;
		@Override public ParserRule getRule() { return rule; }
		
		//{HighLevelCommand}
		//'-' 'Super' 'command' name=EString ( 'with' lowlevelcommand+=[LowLevelCommand|EString] ( "->" lowlevelcommand+=[LowLevelCommand|EString])* )?
		public Group getGroup() { return cGroup; }
		
		//{HighLevelCommand}
		public Action getHighLevelCommandAction_0() { return cHighLevelCommandAction_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
		
		//'Super'
		public Keyword getSuperKeyword_2() { return cSuperKeyword_2; }
		
		//'command'
		public Keyword getCommandKeyword_3() { return cCommandKeyword_3; }
		
		//name=EString
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_4_0() { return cNameEStringParserRuleCall_4_0; }
		
		//( 'with' lowlevelcommand+=[LowLevelCommand|EString] ( "->" lowlevelcommand+=[LowLevelCommand|EString])* )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'with'
		public Keyword getWithKeyword_5_0() { return cWithKeyword_5_0; }
		
		//lowlevelcommand+=[LowLevelCommand|EString]
		public Assignment getLowlevelcommandAssignment_5_1() { return cLowlevelcommandAssignment_5_1; }
		
		//[LowLevelCommand|EString]
		public CrossReference getLowlevelcommandLowLevelCommandCrossReference_5_1_0() { return cLowlevelcommandLowLevelCommandCrossReference_5_1_0; }
		
		//EString
		public RuleCall getLowlevelcommandLowLevelCommandEStringParserRuleCall_5_1_0_1() { return cLowlevelcommandLowLevelCommandEStringParserRuleCall_5_1_0_1; }
		
		//( "->" lowlevelcommand+=[LowLevelCommand|EString])*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_5_2_0() { return cHyphenMinusGreaterThanSignKeyword_5_2_0; }
		
		//lowlevelcommand+=[LowLevelCommand|EString]
		public Assignment getLowlevelcommandAssignment_5_2_1() { return cLowlevelcommandAssignment_5_2_1; }
		
		//[LowLevelCommand|EString]
		public CrossReference getLowlevelcommandLowLevelCommandCrossReference_5_2_1_0() { return cLowlevelcommandLowLevelCommandCrossReference_5_2_1_0; }
		
		//EString
		public RuleCall getLowlevelcommandLowLevelCommandEStringParserRuleCall_5_2_1_0_1() { return cLowlevelcommandLowLevelCommandEStringParserRuleCall_5_2_1_0_1; }
	}
	public class LowLevelCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "diro.geodes.VcsFeatures.LowLevelCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cCommandKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cUseKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCommandAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCommandLowCommandsEnumRuleCall_3_0 = (RuleCall)cCommandAssignment_3.eContents().get(0);
		private final Keyword cAsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameEStringParserRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		
		//LowLevelCommand returns LowLevelCommand:
		//    '-' 'Command' 'use' command=LowCommands 'as' name=EString
		//        ;
		@Override public ParserRule getRule() { return rule; }
		
		//'-' 'Command' 'use' command=LowCommands 'as' name=EString
		public Group getGroup() { return cGroup; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//'Command'
		public Keyword getCommandKeyword_1() { return cCommandKeyword_1; }
		
		//'use'
		public Keyword getUseKeyword_2() { return cUseKeyword_2; }
		
		//command=LowCommands
		public Assignment getCommandAssignment_3() { return cCommandAssignment_3; }
		
		//LowCommands
		public RuleCall getCommandLowCommandsEnumRuleCall_3_0() { return cCommandLowCommandsEnumRuleCall_3_0; }
		
		//'as'
		public Keyword getAsKeyword_4() { return cAsKeyword_4; }
		
		//name=EString
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_5_0() { return cNameEStringParserRuleCall_5_0; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "diro.geodes.VcsFeatures.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	
	public class MergeStrategyElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "diro.geodes.VcsFeatures.MergeStrategy");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDSMCompareEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDSMCompareDSMCompareKeyword_0_0 = (Keyword)cDSMCompareEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cGitDiffEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cGitDiffGitDiffKeyword_1_0 = (Keyword)cGitDiffEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum MergeStrategy returns MergeStrategy:
		//                DSMCompare = 'DSMCompare' | GitDiff = 'GitDiff';
		public EnumRule getRule() { return rule; }
		
		//DSMCompare = 'DSMCompare' | GitDiff = 'GitDiff'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DSMCompare = 'DSMCompare'
		public EnumLiteralDeclaration getDSMCompareEnumLiteralDeclaration_0() { return cDSMCompareEnumLiteralDeclaration_0; }
		
		//'DSMCompare'
		public Keyword getDSMCompareDSMCompareKeyword_0_0() { return cDSMCompareDSMCompareKeyword_0_0; }
		
		//GitDiff = 'GitDiff'
		public EnumLiteralDeclaration getGitDiffEnumLiteralDeclaration_1() { return cGitDiffEnumLiteralDeclaration_1; }
		
		//'GitDiff'
		public Keyword getGitDiffGitDiffKeyword_1_0() { return cGitDiffGitDiffKeyword_1_0; }
	}
	public class LowCommandsElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "diro.geodes.VcsFeatures.LowCommands");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAddEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAddAddKeyword_0_0 = (Keyword)cAddEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCheckoutEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCheckoutCheckoutKeyword_1_0 = (Keyword)cCheckoutEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCheckoutCreateEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCheckoutCreateCheckoutCreateKeyword_2_0 = (Keyword)cCheckoutCreateEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cCloneEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cCloneCloneKeyword_3_0 = (Keyword)cCloneEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cCommitEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cCommitCommitKeyword_4_0 = (Keyword)cCommitEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cCherryPickEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cCherryPickCherryPickKeyword_5_0 = (Keyword)cCherryPickEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cCreateBranchEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cCreateBranchCreateBranchKeyword_6_0 = (Keyword)cCreateBranchEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cFetchEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cFetchFetchKeyword_7_0 = (Keyword)cFetchEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cInitEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cInitInitKeyword_8_0 = (Keyword)cInitEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cPullEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cPullPullKeyword_9_0 = (Keyword)cPullEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cPushEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cPushPushKeyword_10_0 = (Keyword)cPushEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cRemoteAddEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cRemoteAddRemoteAddKeyword_11_0 = (Keyword)cRemoteAddEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cRmEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cRmRmKeyword_12_0 = (Keyword)cRmEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cLogEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cLogLogKeyword_13_0 = (Keyword)cLogEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cOpenEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cOpenOpenKeyword_14_0 = (Keyword)cOpenEnumLiteralDeclaration_14.eContents().get(0);
		
		//enum LowCommands returns LowCommands:
		//                Add = 'Add' | Checkout = 'Checkout' | CheckoutCreate = 'CheckoutCreate' | Clone = 'Clone' | Commit = 'Commit' | CherryPick = 'CherryPick' | CreateBranch = 'CreateBranch' | Fetch = 'Fetch' | Init = 'Init' | Pull = 'Pull' | Push = 'Push' | RemoteAdd = 'RemoteAdd' | Rm = 'Rm' | Log = 'Log' | Open = 'Open';
		public EnumRule getRule() { return rule; }
		
		//Add = 'Add' | Checkout = 'Checkout' | CheckoutCreate = 'CheckoutCreate' | Clone = 'Clone' | Commit = 'Commit' | CherryPick = 'CherryPick' | CreateBranch = 'CreateBranch' | Fetch = 'Fetch' | Init = 'Init' | Pull = 'Pull' | Push = 'Push' | RemoteAdd = 'RemoteAdd' | Rm = 'Rm' | Log = 'Log' | Open = 'Open'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Add = 'Add'
		public EnumLiteralDeclaration getAddEnumLiteralDeclaration_0() { return cAddEnumLiteralDeclaration_0; }
		
		//'Add'
		public Keyword getAddAddKeyword_0_0() { return cAddAddKeyword_0_0; }
		
		//Checkout = 'Checkout'
		public EnumLiteralDeclaration getCheckoutEnumLiteralDeclaration_1() { return cCheckoutEnumLiteralDeclaration_1; }
		
		//'Checkout'
		public Keyword getCheckoutCheckoutKeyword_1_0() { return cCheckoutCheckoutKeyword_1_0; }
		
		//CheckoutCreate = 'CheckoutCreate'
		public EnumLiteralDeclaration getCheckoutCreateEnumLiteralDeclaration_2() { return cCheckoutCreateEnumLiteralDeclaration_2; }
		
		//'CheckoutCreate'
		public Keyword getCheckoutCreateCheckoutCreateKeyword_2_0() { return cCheckoutCreateCheckoutCreateKeyword_2_0; }
		
		//Clone = 'Clone'
		public EnumLiteralDeclaration getCloneEnumLiteralDeclaration_3() { return cCloneEnumLiteralDeclaration_3; }
		
		//'Clone'
		public Keyword getCloneCloneKeyword_3_0() { return cCloneCloneKeyword_3_0; }
		
		//Commit = 'Commit'
		public EnumLiteralDeclaration getCommitEnumLiteralDeclaration_4() { return cCommitEnumLiteralDeclaration_4; }
		
		//'Commit'
		public Keyword getCommitCommitKeyword_4_0() { return cCommitCommitKeyword_4_0; }
		
		//CherryPick = 'CherryPick'
		public EnumLiteralDeclaration getCherryPickEnumLiteralDeclaration_5() { return cCherryPickEnumLiteralDeclaration_5; }
		
		//'CherryPick'
		public Keyword getCherryPickCherryPickKeyword_5_0() { return cCherryPickCherryPickKeyword_5_0; }
		
		//CreateBranch = 'CreateBranch'
		public EnumLiteralDeclaration getCreateBranchEnumLiteralDeclaration_6() { return cCreateBranchEnumLiteralDeclaration_6; }
		
		//'CreateBranch'
		public Keyword getCreateBranchCreateBranchKeyword_6_0() { return cCreateBranchCreateBranchKeyword_6_0; }
		
		//Fetch = 'Fetch'
		public EnumLiteralDeclaration getFetchEnumLiteralDeclaration_7() { return cFetchEnumLiteralDeclaration_7; }
		
		//'Fetch'
		public Keyword getFetchFetchKeyword_7_0() { return cFetchFetchKeyword_7_0; }
		
		//Init = 'Init'
		public EnumLiteralDeclaration getInitEnumLiteralDeclaration_8() { return cInitEnumLiteralDeclaration_8; }
		
		//'Init'
		public Keyword getInitInitKeyword_8_0() { return cInitInitKeyword_8_0; }
		
		//Pull = 'Pull'
		public EnumLiteralDeclaration getPullEnumLiteralDeclaration_9() { return cPullEnumLiteralDeclaration_9; }
		
		//'Pull'
		public Keyword getPullPullKeyword_9_0() { return cPullPullKeyword_9_0; }
		
		//Push = 'Push'
		public EnumLiteralDeclaration getPushEnumLiteralDeclaration_10() { return cPushEnumLiteralDeclaration_10; }
		
		//'Push'
		public Keyword getPushPushKeyword_10_0() { return cPushPushKeyword_10_0; }
		
		//RemoteAdd = 'RemoteAdd'
		public EnumLiteralDeclaration getRemoteAddEnumLiteralDeclaration_11() { return cRemoteAddEnumLiteralDeclaration_11; }
		
		//'RemoteAdd'
		public Keyword getRemoteAddRemoteAddKeyword_11_0() { return cRemoteAddRemoteAddKeyword_11_0; }
		
		//Rm = 'Rm'
		public EnumLiteralDeclaration getRmEnumLiteralDeclaration_12() { return cRmEnumLiteralDeclaration_12; }
		
		//'Rm'
		public Keyword getRmRmKeyword_12_0() { return cRmRmKeyword_12_0; }
		
		//Log = 'Log'
		public EnumLiteralDeclaration getLogEnumLiteralDeclaration_13() { return cLogEnumLiteralDeclaration_13; }
		
		//'Log'
		public Keyword getLogLogKeyword_13_0() { return cLogLogKeyword_13_0; }
		
		//Open = 'Open'
		public EnumLiteralDeclaration getOpenEnumLiteralDeclaration_14() { return cOpenEnumLiteralDeclaration_14; }
		
		//'Open'
		public Keyword getOpenOpenKeyword_14_0() { return cOpenOpenKeyword_14_0; }
	}
	public class LabelTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "diro.geodes.VcsFeatures.LabelType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cUniqueEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cUniqueUniqueKeyword_0_0 = (Keyword)cUniqueEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCommitHashEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCommitHashCommitHashKeyword_1_0 = (Keyword)cCommitHashEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLabelEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLabelLabelKeyword_2_0 = (Keyword)cLabelEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum LabelType returns LabelType:
		//                Unique = 'Unique' | CommitHash = 'CommitHash' | Label = 'Label';
		public EnumRule getRule() { return rule; }
		
		//Unique = 'Unique' | CommitHash = 'CommitHash' | Label = 'Label'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Unique = 'Unique'
		public EnumLiteralDeclaration getUniqueEnumLiteralDeclaration_0() { return cUniqueEnumLiteralDeclaration_0; }
		
		//'Unique'
		public Keyword getUniqueUniqueKeyword_0_0() { return cUniqueUniqueKeyword_0_0; }
		
		//CommitHash = 'CommitHash'
		public EnumLiteralDeclaration getCommitHashEnumLiteralDeclaration_1() { return cCommitHashEnumLiteralDeclaration_1; }
		
		//'CommitHash'
		public Keyword getCommitHashCommitHashKeyword_1_0() { return cCommitHashCommitHashKeyword_1_0; }
		
		//Label = 'Label'
		public EnumLiteralDeclaration getLabelEnumLiteralDeclaration_2() { return cLabelEnumLiteralDeclaration_2; }
		
		//'Label'
		public Keyword getLabelLabelKeyword_2_0() { return cLabelLabelKeyword_2_0; }
	}
	public class VersionUnitTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "diro.geodes.VcsFeatures.VersionUnitType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLineEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLineLineKeyword_0_0 = (Keyword)cLineEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSemanticEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSemanticSemanticKeyword_1_0 = (Keyword)cSemanticEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cFileEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cFileFileKeyword_2_0 = (Keyword)cFileEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cElementEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cElementElementKeyword_3_0 = (Keyword)cElementEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum VersionUnitType returns VersionUnitType:
		//                Line = 'Line' | Semantic = 'Semantic' | File = 'File' | Element = 'Element';
		public EnumRule getRule() { return rule; }
		
		//Line = 'Line' | Semantic = 'Semantic' | File = 'File' | Element = 'Element'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Line = 'Line'
		public EnumLiteralDeclaration getLineEnumLiteralDeclaration_0() { return cLineEnumLiteralDeclaration_0; }
		
		//'Line'
		public Keyword getLineLineKeyword_0_0() { return cLineLineKeyword_0_0; }
		
		//Semantic = 'Semantic'
		public EnumLiteralDeclaration getSemanticEnumLiteralDeclaration_1() { return cSemanticEnumLiteralDeclaration_1; }
		
		//'Semantic'
		public Keyword getSemanticSemanticKeyword_1_0() { return cSemanticSemanticKeyword_1_0; }
		
		//File = 'File'
		public EnumLiteralDeclaration getFileEnumLiteralDeclaration_2() { return cFileEnumLiteralDeclaration_2; }
		
		//'File'
		public Keyword getFileFileKeyword_2_0() { return cFileFileKeyword_2_0; }
		
		//Element = 'Element'
		public EnumLiteralDeclaration getElementEnumLiteralDeclaration_3() { return cElementEnumLiteralDeclaration_3; }
		
		//'Element'
		public Keyword getElementElementKeyword_3_0() { return cElementElementKeyword_3_0; }
	}
	public class CollaborationStyleTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "diro.geodes.VcsFeatures.CollaborationStyleType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLocalOnlyEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLocalOnlyLocalOnlyKeyword_0_0 = (Keyword)cLocalOnlyEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRemoteEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRemoteRemoteKeyword_1_0 = (Keyword)cRemoteEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum CollaborationStyleType returns CollaborationStyleType:
		//                LocalOnly = 'LocalOnly' | Remote = 'Remote';
		public EnumRule getRule() { return rule; }
		
		//LocalOnly = 'LocalOnly' | Remote = 'Remote'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//LocalOnly = 'LocalOnly'
		public EnumLiteralDeclaration getLocalOnlyEnumLiteralDeclaration_0() { return cLocalOnlyEnumLiteralDeclaration_0; }
		
		//'LocalOnly'
		public Keyword getLocalOnlyLocalOnlyKeyword_0_0() { return cLocalOnlyLocalOnlyKeyword_0_0; }
		
		//Remote = 'Remote'
		public EnumLiteralDeclaration getRemoteEnumLiteralDeclaration_1() { return cRemoteEnumLiteralDeclaration_1; }
		
		//'Remote'
		public Keyword getRemoteRemoteKeyword_1_0() { return cRemoteRemoteKeyword_1_0; }
	}
	public class DatabaseTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "diro.geodes.VcsFeatures.DatabaseType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMongoDBEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMongoDBMongoDBKeyword_0_0 = (Keyword)cMongoDBEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cXMIEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cXMIXMIKeyword_1_0 = (Keyword)cXMIEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNeo4JEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNeo4JNeo4JKeyword_2_0 = (Keyword)cNeo4JEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cSQLEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cSQLSQLKeyword_3_0 = (Keyword)cSQLEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum DatabaseType returns DatabaseType:
		//                MongoDB = 'MongoDB' | XMI = 'XMI' | Neo4J = 'Neo4J' | SQL = 'SQL';
		public EnumRule getRule() { return rule; }
		
		//MongoDB = 'MongoDB' | XMI = 'XMI' | Neo4J = 'Neo4J' | SQL = 'SQL'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MongoDB = 'MongoDB'
		public EnumLiteralDeclaration getMongoDBEnumLiteralDeclaration_0() { return cMongoDBEnumLiteralDeclaration_0; }
		
		//'MongoDB'
		public Keyword getMongoDBMongoDBKeyword_0_0() { return cMongoDBMongoDBKeyword_0_0; }
		
		//XMI = 'XMI'
		public EnumLiteralDeclaration getXMIEnumLiteralDeclaration_1() { return cXMIEnumLiteralDeclaration_1; }
		
		//'XMI'
		public Keyword getXMIXMIKeyword_1_0() { return cXMIXMIKeyword_1_0; }
		
		//Neo4J = 'Neo4J'
		public EnumLiteralDeclaration getNeo4JEnumLiteralDeclaration_2() { return cNeo4JEnumLiteralDeclaration_2; }
		
		//'Neo4J'
		public Keyword getNeo4JNeo4JKeyword_2_0() { return cNeo4JNeo4JKeyword_2_0; }
		
		//SQL = 'SQL'
		public EnumLiteralDeclaration getSQLEnumLiteralDeclaration_3() { return cSQLEnumLiteralDeclaration_3; }
		
		//'SQL'
		public Keyword getSQLSQLKeyword_3_0() { return cSQLSQLKeyword_3_0; }
	}
	
	private final VCSFeaturesElements pVCSFeatures;
	private final CommandsElements pCommands;
	private final HistoryElements pHistory;
	private final VersionUnitElements pVersionUnit;
	private final CollaborationStyleElements pCollaborationStyle;
	private final DatabaseElements pDatabase;
	private final EStringElements pEString;
	private final MergeStrategyElements eMergeStrategy;
	private final HighLevelCommandElements pHighLevelCommand;
	private final LowLevelCommandElements pLowLevelCommand;
	private final LowCommandsElements eLowCommands;
	private final LabelTypeElements eLabelType;
	private final EIntElements pEInt;
	private final VersionUnitTypeElements eVersionUnitType;
	private final CollaborationStyleTypeElements eCollaborationStyleType;
	private final DatabaseTypeElements eDatabaseType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public VcsFeaturesGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pVCSFeatures = new VCSFeaturesElements();
		this.pCommands = new CommandsElements();
		this.pHistory = new HistoryElements();
		this.pVersionUnit = new VersionUnitElements();
		this.pCollaborationStyle = new CollaborationStyleElements();
		this.pDatabase = new DatabaseElements();
		this.pEString = new EStringElements();
		this.eMergeStrategy = new MergeStrategyElements();
		this.pHighLevelCommand = new HighLevelCommandElements();
		this.pLowLevelCommand = new LowLevelCommandElements();
		this.eLowCommands = new LowCommandsElements();
		this.eLabelType = new LabelTypeElements();
		this.pEInt = new EIntElements();
		this.eVersionUnitType = new VersionUnitTypeElements();
		this.eCollaborationStyleType = new CollaborationStyleTypeElements();
		this.eDatabaseType = new DatabaseTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("diro.geodes.VcsFeatures".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//VCSFeatures returns VCSFeatures:
	//    {VCSFeatures}
	//    'VCSFeatures'
	//    name=EString
	//        '#' ('COMMANDS'  commands+=Commands ( "," commands+=Commands)*  )?
	//        '#' ('HISTORY'  history+=History ( "," history+=History)*  )?
	//        '#' ('VERSIONNING'  versionunit+=VersionUnit ( "," versionunit+=VersionUnit)*  )?
	//        '#' ('COLLABORATION' 'STYLE'  collaborationstyle+=CollaborationStyle ( "," collaborationstyle+=CollaborationStyle)* )?
	//        '#' ('DATABASES'  database+=Database (database+=Database)*  )?
	//    ;
	public VCSFeaturesElements getVCSFeaturesAccess() {
		return pVCSFeatures;
	}
	
	public ParserRule getVCSFeaturesRule() {
		return getVCSFeaturesAccess().getRule();
	}
	
	//Commands returns Commands:
	//    {Commands}
	//         ('Merge' 'tool:' mergeStrategy=MergeStrategy)?
	//         ('Basic' 'command' 'declaration:' lowlevelcommand+=LowLevelCommand (lowlevelcommand+=LowLevelCommand)* )?
	//         ('Super' 'command' 'declaration:' highlevelcommand+=HighLevelCommand (highlevelcommand+=HighLevelCommand)* )?
	//        ;
	public CommandsElements getCommandsAccess() {
		return pCommands;
	}
	
	public ParserRule getCommandsRule() {
		return getCommandsAccess().getRule();
	}
	
	//History returns History:
	//    {History}
	//        ('Identifying' 'label:' labelType=LabelType)?
	//        ('Version' 'history' 'backlog:' commitHistoryRange=EInt)?
	//        ('Maximum' 'number' 'of' 'branches:' numberOfBranches=EInt)?
	//        ;
	public HistoryElements getHistoryAccess() {
		return pHistory;
	}
	
	public ParserRule getHistoryRule() {
		return getHistoryAccess().getRule();
	}
	
	//VersionUnit returns VersionUnit:
	//    {VersionUnit}
	//        'Detail' 'level:' (granularity+=VersionUnitType (granularity+=VersionUnitType)* )?
	//        ;
	public VersionUnitElements getVersionUnitAccess() {
		return pVersionUnit;
	}
	
	public ParserRule getVersionUnitRule() {
		return getVersionUnitAccess().getRule();
	}
	
	//CollaborationStyle returns CollaborationStyle:
	//    {CollaborationStyle}
	//        'Working:' collabStyle=CollaborationStyleType
	//        ;
	public CollaborationStyleElements getCollaborationStyleAccess() {
		return pCollaborationStyle;
	}
	
	public ParserRule getCollaborationStyleRule() {
		return getCollaborationStyleAccess().getRule();
	}
	
	//Database returns Database:
	//    {Database}
	//    'DB' DatabaseType=DatabaseType '@' connectionString=EString
	//        ;
	public DatabaseElements getDatabaseAccess() {
		return pDatabase;
	}
	
	public ParserRule getDatabaseRule() {
		return getDatabaseAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//enum MergeStrategy returns MergeStrategy:
	//                DSMCompare = 'DSMCompare' | GitDiff = 'GitDiff';
	public MergeStrategyElements getMergeStrategyAccess() {
		return eMergeStrategy;
	}
	
	public EnumRule getMergeStrategyRule() {
		return getMergeStrategyAccess().getRule();
	}
	
	//HighLevelCommand returns HighLevelCommand:
	//    {HighLevelCommand}
	//    '-' 'Super' 'command' name=EString ( 'with' lowlevelcommand+=[LowLevelCommand|EString] ( "->" lowlevelcommand+=[LowLevelCommand|EString])* )?
	//        ;
	public HighLevelCommandElements getHighLevelCommandAccess() {
		return pHighLevelCommand;
	}
	
	public ParserRule getHighLevelCommandRule() {
		return getHighLevelCommandAccess().getRule();
	}
	
	//LowLevelCommand returns LowLevelCommand:
	//    '-' 'Command' 'use' command=LowCommands 'as' name=EString
	//        ;
	public LowLevelCommandElements getLowLevelCommandAccess() {
		return pLowLevelCommand;
	}
	
	public ParserRule getLowLevelCommandRule() {
		return getLowLevelCommandAccess().getRule();
	}
	
	//enum LowCommands returns LowCommands:
	//                Add = 'Add' | Checkout = 'Checkout' | CheckoutCreate = 'CheckoutCreate' | Clone = 'Clone' | Commit = 'Commit' | CherryPick = 'CherryPick' | CreateBranch = 'CreateBranch' | Fetch = 'Fetch' | Init = 'Init' | Pull = 'Pull' | Push = 'Push' | RemoteAdd = 'RemoteAdd' | Rm = 'Rm' | Log = 'Log' | Open = 'Open';
	public LowCommandsElements getLowCommandsAccess() {
		return eLowCommands;
	}
	
	public EnumRule getLowCommandsRule() {
		return getLowCommandsAccess().getRule();
	}
	
	//enum LabelType returns LabelType:
	//                Unique = 'Unique' | CommitHash = 'CommitHash' | Label = 'Label';
	public LabelTypeElements getLabelTypeAccess() {
		return eLabelType;
	}
	
	public EnumRule getLabelTypeRule() {
		return getLabelTypeAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//enum VersionUnitType returns VersionUnitType:
	//                Line = 'Line' | Semantic = 'Semantic' | File = 'File' | Element = 'Element';
	public VersionUnitTypeElements getVersionUnitTypeAccess() {
		return eVersionUnitType;
	}
	
	public EnumRule getVersionUnitTypeRule() {
		return getVersionUnitTypeAccess().getRule();
	}
	
	//enum CollaborationStyleType returns CollaborationStyleType:
	//                LocalOnly = 'LocalOnly' | Remote = 'Remote';
	public CollaborationStyleTypeElements getCollaborationStyleTypeAccess() {
		return eCollaborationStyleType;
	}
	
	public EnumRule getCollaborationStyleTypeRule() {
		return getCollaborationStyleTypeAccess().getRule();
	}
	
	//enum DatabaseType returns DatabaseType:
	//                MongoDB = 'MongoDB' | XMI = 'XMI' | Neo4J = 'Neo4J' | SQL = 'SQL';
	public DatabaseTypeElements getDatabaseTypeAccess() {
		return eDatabaseType;
	}
	
	public EnumRule getDatabaseTypeRule() {
		return getDatabaseTypeAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
